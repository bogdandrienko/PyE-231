* Получение данных от сторонних систем(API без DRF)
- "Умный холодильник" - на самом холодильнике должно быть настольное(desktop) приложение.
** производительность
- изменение режима с внешней системы
- получение мгновенный данных на внешнюю систему
- получение исторических данных на внешнюю систему

Как "холодильник" должен получить запрос снаружи:
1. Он должен быть подключен к public ip (gsm-3/4G модуль)
- уязвимость
-- просто посылаем POST сигнал на ip холодильника
2. Просто интернет, серый ip.
?? есть вариант, с поднятие сокетов
-- каждые ~60 секунд устройство идёт за новыми настройками на сервер.
- rps - request per second - 300 000 / 60 == +- / 10 =

Этапы:
1. План
2. Разработка
2.1 Продумать архитектуру и основные паттерны
2.2 Продумать этапы
MVP
* Проверка сетевых взаимодействий - до конца
3. Публикация


На экране есть цифра(план температуры в холодильной камере)
    +1. Значение берётся из локальной базы данных.
    -2. Нужно брать изменения с определённой периодичностью из локальной базы данных.
    -3. Нужно брать изменения с определённой периодичностью из веб-сервера.
    -4. Есть кнопки, которые должны применять изменения в локальной базе.


"""
Преждевременная оптимизация - обычно плохо, значит рано начали оптимизацию.
    """